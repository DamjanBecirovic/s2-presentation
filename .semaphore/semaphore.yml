version: v1.0
name: "\U0001F40D Django CI Pipeline (Docker)"
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
  containers:
    - name: main
      image: 'registry.semaphoreci.com/python:3.8-node-browsers'
    - name: mysql
      image: 'registry.semaphoreci.com/mysql:8.0'
      env_vars:
        - name: MYSQL_ROOT_PASSWORD
          value: root
fail_fast:
  stop:
    when: branch != 'master'
auto_cancel:
  running:
    when: branch != 'master'
  queued:
    when: branch = 'master'
global_job_config:
  prologue:
    commands:
      - checkout
      - pip install -r requirements.txt --cache-dir .pip_cache
      - cache restore
blocks:
  - name: "\U0001F6E0️ Install Dependencies"
    dependencies: []
    task:
      jobs:
        - name: "\U0001F4E6 Install Python Dependencies"
          commands:
            - apt-get update && apt-get install -y python3-dev
            - apt-get install -y default-libmysqlclient-dev
            - pip download --cache-dir .pip_cache -r requirements.txt
            - cache store
  - name: "\U0001F50D Run Code Analysis"
    dependencies: []
    task:
      jobs:
        - name: "\U0001F6E1️ Pylint Analysis"
          commands:
            - git ls-files | grep -v 'migrations' | grep -v 'settings.py' | grep -v 'manage.py' | grep -E '.py$' | xargs pylint -E --load-plugins=pylint_django
  - name: "\U0001F9EA Run Unit Tests"
    dependencies:
      - "\U0001F6E0️ Install Dependencies"
    task:
      jobs:
        - name: "\U0001F50E Test Models"
          commands:
            - python manage.py test tasks.tests.test_models
        - name: "\U0001F50E Test Views"
          commands:
            - python manage.py test tasks.tests.test_views
  - name: "\U0001F310 Run Browser Tests"
    dependencies:
      - "\U0001F9EA Run Unit Tests"
    task:
      env_vars:
        - name: DB_NAME
          value: pydjango
      jobs:
        - name: "\U0001F3AD Browser Tests"
          commands:
            - mysql --host=mysql -uroot -proot -e "create database $DB_NAME"
            - 'nohup python manage.py runserver 0.0.0.0:8000 &'
            - python manage.py test tasks.tests.test_browser
  - name: "\U0001F510 Run Security Tests"
    dependencies: []
    task:
      jobs:
        - name: ✅ Deployment Checklist
          commands:
            - python manage.py check --deploy --fail-level ERROR
