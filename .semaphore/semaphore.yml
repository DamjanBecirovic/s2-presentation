version: v1.0
name: "\U0001F40D Python CI/CD Pipeline"
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2204
auto_cancel:
  queued:
    when: 'true'
fail_fast:
  cancel:
    when: branch != 'main'
global_job_config:
  prologue:
    commands:
      - checkout
blocks:
  - name: "\U0001F4E6 Setup Dependencies"
    dependencies: []
    task:
      jobs:
        - name: "\U0001F4E6 Install dependencies"
          commands:
            - echo "Setting up Python environment and caching dependencies…"
            - 'export PATH="$HOME/.local/bin:$PATH"'
            - mkdir -p .pip_cache
            - cache restore
            - |
              if [ -f requirements.txt ]; then
                pip install --user --cache-dir .pip_cache -r requirements.txt
              else
                echo "No requirements.txt found, skipping installation."
              fi
            - cache store
  - name: "\U0001F50D Lint"
    dependencies:
      - "\U0001F4E6 Setup Dependencies"
    task:
      jobs:
        - name: "\U0001F50D flake8 lint"
          commands:
            - echo "Running flake8 lint…"
            - 'export PATH="$HOME/.local/bin:$PATH"'
            - mkdir -p .pip_cache
            - cache restore
            - 'pip install --user flake8 || echo "flake8 not installed, skipping lint."'
            - flake8 . || echo "flake8 found issues."
  - name: "\U0001F9EA Unit Tests"
    dependencies:
      - "\U0001F6E1️Security Checks"
    task:
      jobs:
        - name: "\U0001F9EA pytest unit"
          commands:
            - echo "Running unit tests with pytest…"
            - sem-version python $PYTHON_VERSION
            - 'export PATH="$HOME/.local/bin:$PATH"'
            - mkdir -p .pip_cache
            - cache restore
            - 'pytest --maxfail=1 --disable-warnings -q --junitxml=junit_unit.xml tests || echo "No unit tests found, skipping."'
          matrix:
            - env_var: PYTHON_VERSION
              values:
                - '3.10'
                - '3.11'
                - '3.12'
      epilogue:
        always:
          commands:
            - test-results publish junit_unit.xml || echo "No unit test results to publish."
  - name: "\U0001F517 Integration Tests"
    dependencies:
      - "\U0001F6E1️Security Checks"
    task:
      jobs:
        - name: "\U0001F517 pytest integration"
          commands:
            - echo "Running integration tests with pytest…"
            - sem-version python $PYTHON_VERSION
            - 'export PATH="$HOME/.local/bin:$PATH"'
            - mkdir -p .pip_cache
            - cache restore
            - 'pytest --maxfail=1 --disable-warnings -q --junitxml=junit_integration.xml tests/integration || echo "No integration tests found, skipping."'
          matrix:
            - env_var: PYTHON_VERSION
              values:
                - '3.10'
                - '3.11'
                - '3.12'
      epilogue:
        always:
          commands:
            - test-results publish junit_integration.xml || echo "No integration test results to publish."
  - name: "\U0001F433 Docker Build"
    dependencies:
      - "\U0001F517 Integration Tests"
      - "\U0001F9EA Unit Tests"
    task:
      jobs:
        - name: "\U0001F433 Build image"
          commands:
            - echo "Building Docker image…"
            - |
              if [ -f Dockerfile ]; then
                docker build -t my-python-app:${SEMAPHORE_GIT_BRANCH:-latest} .
              else
                echo "No Dockerfile found, skipping Docker build."
              fi
  - name: "\U0001F6E1️Security Checks"
    dependencies:
      - "\U0001F4E6 Setup Dependencies"
    task:
      jobs:
        - name: "\U0001F6E1️ Bandit scan"
          commands:
            - echo "Running Bandit security scan…"
            - 'export PATH="$HOME/.local/bin:$PATH"'
            - mkdir -p .pip_cache
            - cache restore
            - 'pip install --user bandit || echo "bandit not installed, skipping security scan."'
            - bandit -r . -ll || echo "Bandit found security issues."
after_pipeline:
  task:
    jobs:
      - name: "\U0001F4CA Merge reports"
        commands:
          - test-results gen-pipeline-report
